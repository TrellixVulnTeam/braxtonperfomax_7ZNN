/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
/// <reference types="datatables.net" />
import { ElementRef, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';
import { Subject } from 'rxjs';
import { ADTSettings } from './models/settings';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableDirective implements OnDestroy, OnInit {
    private el;
    private vcr;
    private renderer;
    /**
     * The DataTable option you pass to configure your table.
     */
    dtOptions: ADTSettings;
    /**
     * This trigger is used if one wants to trigger manually the DT rendering
     * Useful when rendering angular rendered DOM
     */
    dtTrigger: Subject<any>;
    /**
     * The DataTable instance built by the jQuery library [DataTables](datatables.net).
     *
     * It's possible to execute the [DataTables APIs](https://datatables.net/reference/api/) with
     * this variable.
     */
    dtInstance: Promise<DataTables.Api>;
    private dt;
    constructor(el: ElementRef, vcr: ViewContainerRef, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private displayTable;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DataTableDirective, "[datatable]", never, { "dtOptions": "dtOptions"; "dtTrigger": "dtTrigger"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1kYXRhdGFibGVzLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJhbmd1bGFyLWRhdGF0YWJsZXMuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9sLWxpbi9hbmd1bGFyLWRhdGF0YWJsZXMvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJkYXRhdGFibGVzLm5ldFwiIC8+XG5pbXBvcnQgeyBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIE9uSW5pdCwgUmVuZGVyZXIyLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBBRFRTZXR0aW5ncyB9IGZyb20gJy4vbW9kZWxzL3NldHRpbmdzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGFUYWJsZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgdmNyO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgLyoqXG4gICAgICogVGhlIERhdGFUYWJsZSBvcHRpb24geW91IHBhc3MgdG8gY29uZmlndXJlIHlvdXIgdGFibGUuXG4gICAgICovXG4gICAgZHRPcHRpb25zOiBBRFRTZXR0aW5ncztcbiAgICAvKipcbiAgICAgKiBUaGlzIHRyaWdnZXIgaXMgdXNlZCBpZiBvbmUgd2FudHMgdG8gdHJpZ2dlciBtYW51YWxseSB0aGUgRFQgcmVuZGVyaW5nXG4gICAgICogVXNlZnVsIHdoZW4gcmVuZGVyaW5nIGFuZ3VsYXIgcmVuZGVyZWQgRE9NXG4gICAgICovXG4gICAgZHRUcmlnZ2VyOiBTdWJqZWN0PGFueT47XG4gICAgLyoqXG4gICAgICogVGhlIERhdGFUYWJsZSBpbnN0YW5jZSBidWlsdCBieSB0aGUgalF1ZXJ5IGxpYnJhcnkgW0RhdGFUYWJsZXNdKGRhdGF0YWJsZXMubmV0KS5cbiAgICAgKlxuICAgICAqIEl0J3MgcG9zc2libGUgdG8gZXhlY3V0ZSB0aGUgW0RhdGFUYWJsZXMgQVBJc10oaHR0cHM6Ly9kYXRhdGFibGVzLm5ldC9yZWZlcmVuY2UvYXBpLykgd2l0aFxuICAgICAqIHRoaXMgdmFyaWFibGUuXG4gICAgICovXG4gICAgZHRJbnN0YW5jZTogUHJvbWlzZTxEYXRhVGFibGVzLkFwaT47XG4gICAgcHJpdmF0ZSBkdDtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgdmNyOiBWaWV3Q29udGFpbmVyUmVmLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBkaXNwbGF5VGFibGU7XG59XG4iXX0=